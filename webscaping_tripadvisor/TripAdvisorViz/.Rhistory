# # add column names
colnames(matr) = byratingsin$hotel_name
wordcloud(matr, random.order=FALSE,
colors = c("#00af87", "red", "#000000", "#FCC40F","#6b7a8f"),
title.size=1.5, max.words=400, scale=c(4,0.9))
View(matr)
m
View(matr)
View(m)
matr<-as.data.frame(matr)
wordcloud(matr$`Avatara Guest House`, random.order=FALSE,
colors = c("#00af87", "red", "#000000", "#FCC40F","#6b7a8f"),
title.size=1.5, max.words=400, scale=c(4,0.9))
View(matr)
View(matr)
View(m)
wordcloud(m, random.order=FALSE,
colors = c("#00af87", "red", "#000000", "#FCC40F","#6b7a8f"),
title.size=1.5, max.words=400, scale=c(4,0.9))
####### Word Comparison ##########
reviewsdf$hotel_name<-as.character(reviewsdf$hotel_name)
byratings<-reviewsdf %>%
group_by(ratings) %>%
summarise(text=paste(review,collapse=''))
clean.text = function(x)
{
# tolower
x = tolower(x)
#   # remove rt
x = gsub("rt", "", x)
#   # remove at
x = gsub("@\\w+", "", x)
#   # remove punctuation
x = gsub("[[:punct:]]", " ", x)
#   # remove numbers
x = gsub("[[:digit:]]", "", x)
#   # remove links http
x = gsub("http\\w+", "", x)
#   # remove tabs
x = gsub("[ |\t]{2,}", " ", x)
#   # remove blank spaces at the beginning
x = gsub("^ ", "", x)
#   # remove blank spaces at the end
x = gsub(" $", "", x)
return(x)
}
byratings<-reviewsdf %>%
group_by(ratings) %>%
summarise(text=paste(review,collapse=''))
byratings$cleanedreviews<-lapply(byratings$text, clean.text)
docs <- Corpus(VectorSource(byratings$cleanedreviews))
inspect(docs)
dtm <- TermDocumentMatrix(docs)
m <- as.matrix(dtm)
# # add column names
colnames(m) = byratings$ratings
comparison.cloud(m, random.order=FALSE,
colors = c("#00af87", "red", "#000000", "#FCC40F","#6b7a8f"),
title.size=1.5, max.words=400, scale=c(4,0.9))
byratingsin<-reviewsdf %>%
filter(hotel_name %in% selectedHotel()) %>%
group_by(hotel_name) %>%
summarise(text=paste(review,collapse=''))
byratingsin$cleanedreviews<-lapply(byratingsin$text, clean.text)
docsin <- Corpus(VectorSource(byratingsin$cleanedreviews))
inspect(docsin)
dtmin <- TermDocumentMatrix(docsin)
matr <- as.matrix(dtmin)
# # add column names
colnames(matr) = byratingsin$hotel_name
wordcloud(matr, random.order=FALSE,
colors = c("#00af87", "red", "#000000", "#FCC40F","#6b7a8f"),
title.size=1.5, max.words=400, scale=c(4,0.9))
View(matr)
wordcloud(m, random.order=FALSE,
colors = c("#00af87", "red", "#000000", "#FCC40F","#6b7a8f"),
title.size=1.5, max.words=400, scale=c(4,0.9))
comparison.cloud(m, random.order=FALSE,
colors = c("#00af87", "red", "#000000", "#FCC40F","#6b7a8f"),
title.size=1.5, max.words=400, scale=c(4,0.9))
wordcloud(m, random.order=FALSE,
title.size=1.5, max.words=400, scale=c(4,0.9))
matr<-as.data.frame(matr)
wordcloud(rownames(matr), freq=matr$`Avatara Guest House`,random.order=FALSE,
title.size=1.5, max.words=400, scale=c(4,0.9))
wordcloud(rownames(matr), freq=matr$`Avatara Guest House`,random.order=FALSE,
title.size=1.5, max.words=400, scale=c(4,0.9),colors = c("#00af87", "red", "#000000", "#FCC40F","#6b7a8f"))
runApp()
matr[,1]
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
reviewsdfsentiments$word=rownames(reviewsdfsentiments)
reviewsdfsentiments<-melt(reviewsdfsentiments, value.name = "n")
reviewsdfsentiments<-data.frame(sentiment=rownames(reviewsdfsentiments),n=reviewsdfsentiments$X3.of.5.stars)
reviewsdfsentiments$word=rownames(reviewsdfsentiments)
reviewsdfsentiments<-melt(reviewsdfsentiments, value.name = "n")
reviewsdfsentiments<-data.frame(sentiment=rownames(reviewsdfsentiments),n=reviewsdfsentiments$X3.of.5.stars)
sentiments=  reviewsdfsentiments %>% inner_join(get_sentiments("bing")) %>%
spread(sentiment, n, fill = 0) %>% mutate(sentiment = positive - negative)
View(reviewsdf)
reviewsdfsentiments$word=rownames(reviewsdfsentiments)
reviewsdfsentiments<-melt(reviewsdfsentiments, value.name = "n")
View(reviewsdfsentiments)
reviewsdfsentiments$word=rownames(reviewsdfsentiments)
##Individual
reviewsdfsentiments<-reviewsdf
reviewsdfsentiments$word=rownames(reviewsdfsentiments)
reviewsdfsentiments<-melt(reviewsdfsentiments, value.name = "n")
reviewsdfsentiments<-data.frame(sentiment=rownames(reviewsdfsentiments),n=reviewsdfsentiments$X3.of.5.stars)
View(reviewsdf)
View(matr)
View(byratings)
byratings<-reviewsdf %>%
group_by(hotel_name) %>%
summarise(text=paste(review,collapse=''))
View(byratings)
byratings$cleanedreviews<-lapply(byratings$text, clean.text)
docs <- Corpus(VectorSource(byratings$cleanedreviews))
inspect(docs)
dtm <- TermDocumentMatrix(docs)
m <- as.matrix(dtm)
View(m)
View(byratings)
View(byratings)
View(byratingsin)
View(m)
View(byratings)
reviewsdfsentiments<-byratings
sentiments=  reviewsdfsentiments %>% inner_join(get_sentiments("bing")) %>%
spread(sentiment, n, fill = 0) %>% mutate(sentiment = positive - negative)
View(byratings)
colnames(reviewsdfsentiments)[3]="wprd"
sentiments=  reviewsdfsentiments %>% inner_join(get_sentiments("bing")) %>%
spread(sentiment, n, fill = 0) %>% mutate(sentiment = positive - negative)
View(m)
View(matr)
m
colnames(m) = byratings$hotel_name
reviewsdfsentiments<-byratings
reviewsdfsentiments<-melt(reviewsdfsentiments, value.name = "n")
View(reviewsdfsentiments)
reviewsdfsentiments<-byratings
View(reviewsdfsentiments)
reviewsdfsentiments<-m
reviewsdfsentiments<-melt(reviewsdfsentiments, value.name = "n")
View(reviewsdfsentiments)
View(reviewsdfsentiments)
sentiments=  reviewsdfsentiments %>% inner_join(get_sentiments("bing")) %>%
spread(sentiment, n, fill = 0) %>% mutate(sentiment = positive - negative)
colnames(reviewsdfsentiments)[1]<-"word"
sentiments=  reviewsdfsentiments %>% inner_join(get_sentiments("bing")) %>%
spread(sentiment, n, fill = 0) %>% mutate(sentiment = positive - negative)
reviewsdfsentiments$word<-as.character(reviewsdfsentiments$word)
sentiments=  reviewsdfsentiments %>% inner_join(get_sentiments("bing")) %>%
spread(sentiment, n, fill = 0) %>% mutate(sentiment = positive - negative)
View(reviewsdfsentiments)
View(sentiments)
View(sentiments)
sentiments<-sentiments %>% group_by(hotel_name) %>% mutate(Index=nrow)
View(sentiments)
sentiments<-sentiments %>% group_by(Docs) %>% mutate(Index=nrow)
sentiments<-sentiments %>% group_by(Docs) %>% mutate(Index=nrow)
sentiments<-sentiments %>% group_by(Docs) %>% mutate(index=nrow)
sentiments$Docs<-as.character(sentiments$Docs)
sentiments<-sentiments %>% group_by(Docs) %>% mutate(index=nrow)
View(sentiments)
sentiments<-sentiments  %>% mutate(index=rownames(sentiments))
View(sentiments)
ggplot(sentiments, aes(index, sentiment) +
ggplot(sentiments, aes(index, sentiment) +
facet_wrap(~variable, ncol = 2, scales = "free_x")
ggplot(sentiments, aes(index, sentiment)) +
geom_col(show.legend = FALSE) #+
View(sentiments)
ggplot(sentiments, aes(index, sentiment)) +
geom_col(show.legend = FALSE) #+
ggplot(sentiments, aes(index, sentiment)) +
geom_col(show.legend = FALSE) #+
ggplot(sentiments, aes(index, sentiment)) +
geom_col(show.legend = FALSE) #+
ggplot(sentiments, aes(index, sentiment,, fill = book)) +
geom_col(show.legend = FALSE) #+
ggplot(sentiments, aes(index, sentiment,fill = Docs)) +
geom_col(show.legend = FALSE) #+
ggplot(sentiments, aes(index, sentiment,fill = Docs)) +
geom_bar()
ggplot(sentiments, aes(index, sentiment,fill = Docs)) +
geom_bar(stat="identity")
ggplot(sentiments, aes(index, sentiment,)) +
geom_bar(stat="identity")
ggplot(sentiments, aes(index, sentiment)) +
geom_bar(stat="identity")
sentiments$index<-as.numeric(sentiments$index)
ggplot(sentiments, aes(index, sentiment)) +
geom_bar(stat="identity")
ggplot(sentiments, aes(index, sentiment)) +
geom_col(stat="identity")
ggplot(sentiments, aes(index, sentiment)) +
geom_col()
ggplot(sentiments, aes(index, sentiment)) +
geom_col(show.legend = FALSE)
ggplot(sentiments, aes(index, sentiment)) +
geom_col(show.legend = FALSE, width=3)
ggplot(sentiments, aes(index, sentiment)) +
geom_col(show.legend = FALSE, width=8)
ggplot(sentiments, aes(index, sentiment)) +
geom_col(show.legend = FALSE, width=8) +
facet_wrap(~Docs ncol = 2, scales = "free_x")
ggplot(sentiments, aes(index, sentiment)) +
geom_col(show.legend = FALSE, width=8) +
facet_wrap(~Docs ncol = 2, scales = "free_x")
ggplot(sentiments, aes(index, sentiment)) +
geom_col(show.legend = FALSE, width=8) +
facet_wrap(~Docs,ncol = 2, scales = "free_x")
View(sentiments)
ggplot(sentiments, aes(index, sentiment)) +
geom_col(show.legend = FALSE, width=8)
m
runApp()
runApp()
View(m)
runApp()
m
####### Word Comparison ##########
reviewsdf$hotel_name<-as.character(reviewsdf$hotel_name)
byratings<-reviewsdf %>%
group_by(ratings) %>%
summarise(text=paste(review,collapse=''))
clean.text = function(x)
{
# tolower
x = tolower(x)
#   # remove rt
x = gsub("rt", "", x)
#   # remove at
x = gsub("@\\w+", "", x)
#   # remove punctuation
x = gsub("[[:punct:]]", " ", x)
#   # remove numbers
x = gsub("[[:digit:]]", "", x)
#   # remove links http
x = gsub("http\\w+", "", x)
#   # remove tabs
x = gsub("[ |\t]{2,}", " ", x)
#   # remove blank spaces at the beginning
x = gsub("^ ", "", x)
#   # remove blank spaces at the end
x = gsub(" $", "", x)
return(x)
}
byratings<-reviewsdf %>%
group_by(ratings) %>%
summarise(text=paste(review,collapse=''))
byratings$cleanedreviews<-lapply(byratings$text, clean.text)
docs <- Corpus(VectorSource(byratings$cleanedreviews))
inspect(docs)
dtm <- TermDocumentMatrix(docs)
m <- as.matrix(dtm)
# # add column names
# # add column names
#  colnames(m) = byratings$ratings
# # add column names
#  colnames(m) = byratings$ratings
# ### Sentiment #
# # add column names
#  colnames(m) = byratings$ratings
# ### Sentiment #
#
# # add column names
#  colnames(m) = byratings$ratings
# ### Sentiment #
#
#  colnames(m) = byratings$hotel_name
# # add column names
#  colnames(m) = byratings$ratings
# ### Sentiment #
#
#  colnames(m) = byratings$hotel_name
#
# # add column names
#  colnames(m) = byratings$ratings
# ### Sentiment #
#
#  colnames(m) = byratings$hotel_name
#
#  reviewsdfsentiments<-m
# # add column names
#  colnames(m) = byratings$ratings
# ### Sentiment #
#
#  colnames(m) = byratings$hotel_name
#
#  reviewsdfsentiments<-m
#  reviewsdfsentiments<-melt(reviewsdfsentiments, value.name = "n")
# # add column names
#  colnames(m) = byratings$ratings
# ### Sentiment #
#
#  colnames(m) = byratings$hotel_name
#
#  reviewsdfsentiments<-m
#  reviewsdfsentiments<-melt(reviewsdfsentiments, value.name = "n")
# colnames(reviewsdfsentiments)[1]<-"word"
View(m)
View(reviewsdf)
byratings$cleanedreviews<-lapply(byratings$text, clean.text)
byratings<-reviewsdf %>%
group_by(ratings) %>%
summarise(text=paste(review,collapse=''))
byratings$cleanedreviews<-lapply(byratings$text, clean.text)
docs <- Corpus(VectorSource(byratings$cleanedreviews))
inspect(docs)
dtm <- TermDocumentMatrix(docs)
m <- as.matrix(dtm)
m
View(byratings)
runApp()
reviewsdfsentiments<-m
reviewsdfsentiments<-melt(reviewsdfsentiments, value.name = "n")
colnames(reviewsdfsentiments)[1]<-"word"
reviewsdfsentiments<-data.frame(sentiment=rownames(reviewsdfsentiments),n=reviewsdfsentiments$X3.of.5.stars)
reviewsdfsentiments$word<-as.character(reviewsdfsentiments$word)
sentiments=  reviewsdfsentiments %>% inner_join(get_sentiments("bing")) %>%
spread(sentiment, n, fill = 0) %>% mutate(sentiment = positive - negative)
reviewsdfsentiments<-m
reviewsdfsentiments<-melt(reviewsdfsentiments, value.name = "n")
colnames(reviewsdfsentiments)[1]<-"word"
reviewsdfsentiments<-data.frame(sentiment=rownames(reviewsdfsentiments),n=reviewsdfsentiments$X3.of.5.stars)
reviewsdfsentiments$word<-as.character(reviewsdfsentiments$word)
sentiments=  reviewsdfsentiments %>% inner_join(get_sentiments("bing")) %>%
spread(sentiment, n, fill = 0) %>% mutate(sentiment = positive - negative)
sentiments$Docs<-as.character(sentiments$Docs)
sentiments<-sentiments  %>% mutate(index=rownames(sentiments))
sentiments$index<-as.numeric(sentiments$index)
ggplot(sentiments, aes(index, sentiment)) +
geom_col(show.legend = FALSE, width=8)
mzz= m %>% select(hotel_name %in% selectedHotel())
reviewsdfsentiments<-mzz
reviewsdfsentiments<-melt(reviewsdfsentiments, value.name = "n")
runApp()
mzz= m %>% select(hotel_name %in% selectedHotel())
View(m)
View(reviewsdf)
mzz= m %>% select(hotel_name %in% "Avatara Guest House")
mzz=data.frame(m)
runApp()
View(mzz)
View(matr)
runApp()
View(matr)
runApp()
runApp()
runApp()
View(sentiments)
sentiments=  reviewsdfsentiments %>% inner_join(get_sentiments("bing")) %>%
spread(sentiment, n, fill = 0) %>% mutate(sentiment = positive - negative)
View(sentiments)
byratingsin<-reviewsdf %>% filter(hotel_name %in% selectedHotel()) %>%
group_by(hotel_name) %>%
summarise(text=paste(review,collapse=''))
byratingsin<-reviewsdf %>% filter(hotel_name %in% "Avatara Guest House") %>%
group_by(hotel_name) %>%
summarise(text=paste(review,collapse=''))
byratingsin$cleanedreviews<-lapply(byratingsin$text, clean.text)
docsin <- Corpus(VectorSource(byratingsin$cleanedreviews))
inspect(docsin)
dtmin <- TermDocumentMatrix(docsin)
matr <- as.matrix(dtmin)
# # add column names
colnames(matr) = byratingsin$hotel_name
matr<-as.data.frame(matr)
reviewsdfsentiments<-matr
reviewsdfsentiments<-melt(reviewsdfsentiments, value.name = "n")
colnames(reviewsdfsentiments)[1]<-"word"
reviewsdfsentiments$word<-as.character(reviewsdfsentiments$word)
sentiments=  reviewsdfsentiments %>% inner_join(get_sentiments("bing")) %>%
spread(sentiment, n, fill = 0) %>% mutate(sentiment = positive - negative)
View(reviewsdf)
View(reviewsdfsentiments)
reviewsdfsentiments<-matr
View(reviewsdfsentiments)
View(reviewsdfsentiments)
#reviewsdfsentiments<-melt(reviewsdfsentiments, value.name = "n")
colnames(reviewsdfsentiments)[1]<-"word"
View(reviewsdfsentiments)
reviewsdfsentiments$word<-rownames(reviewsdfsentiments)
View(reviewsdfsentiments)
reviewsdfsentiments<-matr
#reviewsdfsentiments<-melt(reviewsdfsentiments, value.name = "n")
#r(reviewsdfsentiments)<-"word"
reviewsdfsentiments$word<-rownames(reviewsdfsentiments)
View(reviewsdfsentiments)
sentiments=  reviewsdfsentiments %>% inner_join(get_sentiments("bing")) %>%
spread(sentiment, n, fill = 0) %>% mutate(sentiment = positive - negative)
m
reviewsdfsentiments<-melt(reviewsdfsentiments, value.name = "n")
reviewsdfsentiments<-m
reviewsdfsentiments<-melt(reviewsdfsentiments, value.name = "n")
View(reviewsdfsentiments)
#reviewsdfsentiments<-melt(reviewsdfsentiments, value.name = "n")
#r(reviewsdfsentiments)<-"word"
reviewsdfsentiments$word<-rownames(reviewsdfsentiments)
reviewsdfsentiments<-matr
#reviewsdfsentiments<-melt(reviewsdfsentiments, value.name = "n")
#r(reviewsdfsentiments)<-"word"
reviewsdfsentiments$word<-rownames(reviewsdfsentiments)
colnames(reviewsdfsentiments)[1]<-"Docs"
View(reviewsdf)
View(reviewsdfsentiments)
colnames(reviewsdfsentiments)[1]<-n
colnames(reviewsdfsentiments)[1]<-"n"
reviewsdfsentiments$word<-as.character(reviewsdfsentiments$word)
sentiments=  reviewsdfsentiments %>% inner_join(get_sentiments("bing")) %>%
spread(sentiment, n, fill = 0) %>% mutate(sentiment = positive - negative)
View(sentiments)
View(reviewsdfsentiments)
sentiments=  reviewsdfsentiments %>% inner_join(get_sentiments("bing")) %>%
spread(sentiment, n, fill = 0) %>% mutate(sentiment = positive - negative)
reviewsdfsentiments %>% inner_join(get_sentiments("bing"))
View(reviewsdfsentiments)
runApp()
View(byratings)
View(reviewsdf)
byratingsin<-reviewsdf %>% filter(hotel_name %in% selectedHotel()) %>%
group_by(hotel_name) %>%
summarise(text=paste(review,collapse=''))
byratingsin<-reviewsdf %>% filter(hotel_name %in% "Canal Quays") %>%
group_by(hotel_name) %>%
summarise(text=paste(review,collapse=''))
byratingsin<-reviewsdf %>% filter(hotel_name %in% selectedHotel()) %>%
group_by(hotel_name) %>%
summarise(text=paste(review,collapse=''))
byratingsin$cleanedreviews<-lapply(byratingsin$text, clean.text)
docsin <- Corpus(VectorSource(byratingsin$cleanedreviews))
inspect(docsin)
dtmin <- TermDocumentMatrix(docsin)
matr <- as.matrix(dtmin)
# # add column names
colnames(matr) = byratingsin$hotel_name
matr<-as.data.frame(matr)
reviewsdfsentiments<-matr
#reviewsdfsentiments<-melt(reviewsdfsentiments, value.name = "n")
#r(reviewsdfsentiments)<-"word"
reviewsdfsentiments$word<-rownames(reviewsdfsentiments)
colnames(reviewsdfsentiments)[1]<-"n"
reviewsdfsentiments$word<-as.character(reviewsdfsentiments$word)
sentiments=  reviewsdfsentiments %>% inner_join(get_sentiments("bing")) %>%
spread(sentiment, n, fill = 0) %>% mutate(sentiment = positive - negative)
sentiments$Docs<-as.character(sentiments$Docs)
sentiments<-sentiments  %>% mutate(index=rownames(sentiments))
#sentiments$<-as.character(sentiments$Docs)
sentiments<-sentiments  %>% mutate(index=rownames(sentiments))
sentiments$index<-as.numeric(sentiments$index)
ggplot(sentiments, aes(index, sentiment)) +
geom_col(show.legend = FALSE, width=3)
runApp()
ggplot(sentiments, aes(index, sentiment)) +
geom_col(show.legend = FALSE, width=1)
ggplot(sentiments, aes(index, sentiment)) +
geom_col(show.legend = FALSE, width=0.7)
library(ggthemes)
library(theme)
library(ggtheme)
install.packages("ggtheme")
ggplot(sentiments, aes(index, sentiment)) +
geom_col(show.legend = FALSE, width=0.7) + theme_bw()
runApp()
ggplot(sentiments, aes(index, sentiment)) +
geom_col(show.legend = FALSE, width=0.9) + theme_bw()
ggplot(sentiments, aes(index, sentiment)) +
geom_col(show.legend = FALSE, width=0.2) + theme_bw()
runApp()
runApp()
library(flexdashboard)
library(flexdashboard)
library(dplyr)
library(ggplot2)
library(ggthemes)
library(leaflet)
library(scales)
install.packages("ggthemes")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
####### Word Comparison ##########
reviewsdf<-read.csv("reviews.csv")
View(reviewsdf)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
